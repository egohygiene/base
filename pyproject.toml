[tool.poetry]
name = "egohygiene-base"
version = "0.1.0"
description = "Development tooling, configuration, and linters for Ego Hygiene projects."
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
black = "25.1.0"
pre-commit = "4.2.0"
pre-commit-hooks = "5.0.0"
proselint = "^0.14.0"
ruff = "^0.12.7"
mypy = "^1.17.1"

[build-system]
requires = ["poetry-core>=1.5"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.ruff_cache
    | \.pytest_cache
    | \.tox
    | \.cache
    | \.venv
    | \.ipynb_checkpoints
    | \.lsp_symlink
    | _build
    | buck-out
    | build
    | dist
    | migrations
    | venv
    | blib2to3
    | resources
)/
'''

[tool.ruff]
cache-dir = ".cache/.ruff_cache"
line-length = 88
respect-gitignore = true
target-version = "py312"
src = ["."]
required-version = ">=0.1.0"
fix = false
show-fixes = true

[tool.ruff.lint]
select = ["ALL"]
extend-select = ["B", "Q"]
fixable = [
    "A", "ANN", "ARG", "B", "BLE", "C", "COM", "D", "DTZ", "E", "EM", "ERA", "EXE",
    "F", "FBT", "G", "I", "ICN", "INP", "ISC", "N", "PD", "PGH", "PIE", "PL", "PT",
    "PTH", "Q", "RET", "RUF", "S", "SIM", "T", "TID", "TRY", "UP", "W", "YTT"
]
ignore = []
task-tags = ["TODO", "FIXME", "XXX", "HACK"]
typing-modules = ["airflow.typing_compat"]
unfixable = ["F401"]
per-file-ignores = { "__init__.py" = ["I001"] }

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ["typing.overload"]
property-decorators = []

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = false
ignore-fully-untyped = false
mypy-init-return = false
suppress-dummy-args = false
suppress-none-returning = false

[tool.ruff.lint.flake8-bandit]
check-typed-exception = false
hardcoded-tmp-directory = ["/tmp", "/var/tmp", "/dev/shm"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = false
